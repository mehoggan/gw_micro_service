cmake_minimum_required(VERSION 2.6)

project (warscroll_collector CXX)

set(WARSCROLL_COLLECTOR_HEADERS warscroll_collector.h)

set(PROJECT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(WARSCROLL_COLLECTOR_CODEGEN_DIR "${PROJECT_BINARY_DIR}/codegen")

PREPEND(WARSCROLL_COLLECTOR_HEADERS_PATHS ${PROJECT_SOURCE_DIR} ${WARSCROLL_COLLECTOR_HEADERS})

CODEGEN_FILES(WARSCROLL_COLLECTOR_CODEGEN_SOURCES ${WARSCROLL_COLLECTOR_CODEGEN_DIR} ${WARSCROLL_COLLECTOR_HEADERS})

add_custom_command(OUTPUT ${WARSCROLL_COLLECTOR_CODEGEN_SOURCES}
    COMMAND ${NGREST_BIN_PATH}ngrestcg -i "${PROJECT_SOURCE_DIR}" -o ${WARSCROLL_COLLECTOR_CODEGEN_DIR} -t service ${WARSCROLL_COLLECTOR_HEADERS}
    DEPENDS ${WARSCROLL_COLLECTOR_HEADERS_PATHS}
)

file(GLOB WARSCROLL_COLLECTOR_SOURCES ${PROJECT_SOURCE_DIR}/*.cpp)

list(APPEND WARSCROLL_COLLECTOR_SOURCES ${WARSCROLL_COLLECTOR_CODEGEN_SOURCES})

include_directories(${PROJECT_SOURCE_DIR} $ENV{NGREST_EXT_INCLUDES})

add_library(warscroll_collector MODULE ${WARSCROLL_COLLECTOR_SOURCES})

set_target_properties(warscroll_collector PROPERTIES PREFIX "")
set_target_properties(warscroll_collector PROPERTIES
    LIBRARY_OUTPUT_DIRECTORY "${PROJECT_SERVICES_DIR}"
)

target_link_libraries(warscroll_collector ngrestutils ngrestcommon ngrestjson ngrestengine $ENV{NGREST_EXT_LIBS})
